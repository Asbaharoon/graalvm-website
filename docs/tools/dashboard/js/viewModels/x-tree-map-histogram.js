define(["knockout","app/view-stack","app/util","ojs/ojattributegrouphandler","ojs/ojarraytreedataprovider","ojs/ojtreemap","ojs/ojknockout"],(function(t,e,n,o,i){return function(r){const a=new o.ColorAttributeGroupHandler,u=new e;u.push(r.tile.section.treeMap.root());const l=t.observableArray();t.computed((function(){let t=u.currentViewRoot();l(t?[s(t,2,"*")]:[])})),this.id="tree-map-"+r.tile.id,this.treemapData=new i(l,{keyAttributes:"id",childrenAttribute:"nodes"}),this.getColor=function(t){if(t.length>0)return a.getValue(t[t.length-1].id)},this.breadcrumbs=t.pureComputed((function(){const t=[],e=u.currentViewRoot();return e&&e.isGroup()?u.stack().forEach(e=>{t.push({name:n.truncateCenter(e.name,25,"...")})}):u.stack().forEach(e=>{e.isGroup()||t.push({name:n.truncateCenter(e.name,25,"...")})}),t})),this.breadcrumbId=function(t){return`breadcrumb-${r.tile.id}-${t}`},this.breadcrumbButtonClick=function(t){const e=parseInt(t.currentTarget.id.slice(`breadcrumb-${r.tile.id}-`.length));return u.size()>e&&u.stack.splice(e+1,u.size()-e),!0},this.zoomIn=function(t){let e;const n=document.getElementById(this.id);if(t.target.id!==this.id&&(e=n.getContextByNode(t.target)),e){const t=e.indexPath[1],n=u.currentViewRoot(),o=n?n.groupedChildren(u,2,.02)[t]:void 0;if(o)if(o.isLeafNode()){if("code-breakdown"===r.tile.sectionName){const t=r.tile.dataSource,e=t.sectionFor("points-to");if(e){const n=o.getFullPath(),i={entryPointName:n.substring(2,n.lastIndexOf(")")+1)},a=t.componentFor("points-to");r.model.addTile(a,t,"points-to",e,i)}}}else u.push(o)}}.bind(this),this.zoomOut=function(){const t=u.currentViewRoot();t&&!t.isRoot&&u.pop()},this.reset=function(){u.isEmpty()||u.clear(),u.push(r.tile.section.treeMap.root())};var d=document.createElement("div");function s(t,e,n){let o={id:t.getFullPath(),path:n,label:c(t),value:t.cumulativeValue()};return e>0&&(o.nodes=t.groupedChildren(u,2,.02).map((t,o)=>s(t,e-1,`${n}-${o}`))),o}function c(t){const e=m(t.cumulativeValue(),0);return t.isLeafNode()?`${t.getFullPath()} (${e})`:`${n.truncate(t.getFullPath(),50,"...")} (${e})`}function p(t){return t=t.replace("<","&lt;").replace(">","&gt;"),t=n.truncateCenter(t,20,"...")}function m(t,e){return t<1e3?t+" Bytes":t<1e6?n.roundAndFormat(t/1e3,e)+" kB":t<1e9?n.roundAndFormat(t/1e6,e)+" MB":n.roundAndFormat(t/1e9,e)+" GB"}d.className="x-tree-map-histogram-tooltip",this.tooltip=function(t){let e=u.currentViewRoot();if(t.itemData.path.split("-").forEach(t=>{null!=e&&"*"!==t&&(e=e.groupedChildren(u,2,.02)[parseInt(t)])}),e)return d.innerHTML=function(t){const e=p(t.name);let o=`<div class='x-tree-map-histogram-tooltip-title'><b>${t.fullPath}</b></div>`;o+="<div class='x-tree-map-histogram-tooltip-divider'></div>";let i=t.relativeCumulativeValue(1,!0);if(i>=0){i=n.roundAndFormat(100*i,3);const r=p(t.nonGroupParent().name);o+=`<div>'${e}' in '${r}': ${i}%</div>`}let a=t.relativeCumulativeValue(2,!0);if(a>=0){a=n.roundAndFormat(100*a,3);const i=p(t.nonGroupGrandparent().name);o+=`<div>'${e}' in '${i}': ${a}%</div>`}let u=t.cumulativeValue()/r.tile.section.treeMap.root().cumulativeValue();if(u=n.roundAndFormat(100*u,3),o+=`<div>'${e}' in image: ${u}%</div>`,o+="<div class='x-tree-map-histogram-tooltip-divider'></div>",null!=t.nonGroupGrandparent()){let e=t.nonGroupParent().relativeCumulativeValue(1,!0);e=n.roundAndFormat(100*e,3);const i=p(t.nonGroupParent().name),r=p(t.nonGroupGrandparent().name);o+=`<div>'${i}' in '${r}': ${e}%</div>`}if(null!=t.nonGroupParent()){let e=t.nonGroupParent().cumulativeValue()/r.tile.section.treeMap.root().cumulativeValue();e=n.roundAndFormat(100*e,3);const i=p(t.nonGroupParent().name);o+=`<div>'${i}' in image: ${e}%</div>`}o+="<div class='x-tree-map-histogram-tooltip-divider'></div>";const l=m(t.cumulativeValue(),3);return o+=`<div>machine code size: ${l}</div>`,o}(e),{insert:d}}}}));